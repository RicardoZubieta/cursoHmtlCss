curso de html y css 
maestro Diego De Granda


introduccion:

html es la estrucutra de la informacion para el usuario
css son los estilos que podra tener la estructura del html

Existen tres estándares importantes para generar productos web. Estos son los lenguajes o estándares que entiende todo navegador web:

HTML
CSS
JavaScript

HTML
Estructura de los documentos que se visualizan en 
los navegadores (Chrome, Edge, Firefox, Safari, 
Opera, entre otros). Es el lenguaje con el que 
clasificamos o etiquetamos cada parte del documento,
dejándole saber al navegador qué información va a 
visualizar y qué valor tiene para nosotros. 
De esa manera, presentamos: Barras de Navegación, 
Secciones, artículos, listas, títulos de diferentes
tamaños, audios, videos, imágenes, entre otros.

CSS
Es el lenguaje con el que le damos estilos a todo
 el contenido previamente etiquetado con HTML. 
 Es el encargado o usado para darle todo el aspecto 
 visual de manera profesional, usando estándares de
  diseño de documentos y logrando así la correcta 
  visualización de textos y recursos audiovisuales 
  en formatos digitales o, en nuestro caso, las 
  páginas web.

  JavaScript
Es lenguaje que se emplea para crear o brindar
 a las páginas web la capacidad de interactuar con
  el usuario y los recursos asociados a una página 
  web, como lo son: bases de datos, servidores de 
  diversa índole, información derivada de la 
  interacción de cada página en sí.

Diferencias entre HTML, CSS y JavaScript

HTML es la estructura, como si fuese el esqueleto 
de un ser humano o los cimientos de un edificio. 
Por ejemplo: una página web que funciona, pero sin
 interactividad, colores ni diseño.

CSS corresponde a lo estético, como la piel de 
ser humanos. La pintura y adornos de los edificios
 o la manera en que es posible que la estructura 
 del html se vea mejor para los usuarios.

JavaScript equivale a los músculos, lo que da esa
 interactividad a las personas para moverse y 
 realizar acciones como correr.

clase 1
que es el fronted;

Frontend es la parte de un programa o dispositivo
 a la que un usuario puede acceder directamente. 
 Son todas las tecnologías de diseño y desarrollo
  web que corren en el navegador y que se encargan 
  de la interactividad con los usuarios.

Un programador Frontend debe saber de código
 que entienda el navegador (HTML, CSS y JavaScript)
  para poder usar algunos frameworks o librerías que
   expanden sus capacidades para crear cualquier 
   tipo de interfaces de usuarios. React, Redux, 
   Angular, Bootstrap, Foundation, LESS, Sass, 
   Stylus y PostCSS son algunos de ellos.

Herramientas que maneja un frontend
Debido a que un frontend es el desarrollador 
que va a manejar las cosas del lado del cliente,
 las tecnologías con las que va a trabajar son:

HTML: https://devdocs.io/html/
CSS: https://devdocs.io/css/
JavaScript: https://devdocs.io/javascript/
Frameworks de CSS para frontend:
Bootstrap: https://getbootstrap.com/
Foundation CSS: https://get.foundation/
Materialize CSS: https://materializecss.com/
Los frameworks de JavaScript para frontend:

React JS: https://es.reactjs.org/
Angular JS: https://angular.io/
Vue JS: https://vuejs.org/
Preprocesadores de CSS:
Stylus: https://stylus-lang.com/
SASS: https://sass-lang.com/
Compiladores / empaquetadores de JS:
BABEL: https://babeljs.io/
Webpack: https://webpack.js.org/



clase 2; que es el front-end?
es el desarrollador que manejara las cosas del lado del cliente, es decir el navegador,
es la intereccion con el cliente. 

estandares que debe saber un fronted
html, css y js.
son estandares que entiende el navegador.

framworks de css.
fragmentos de css ya construidos, para agregarlos a los proyectos,
y poder trabajar mas rapidos los proyectos.

framworks y librerias de js.
fragmentos ya construidos que hacen los procesos mas rapidos.

prprocesadores de css.
less, stylus y sass.
tegnologias para usar css diferentes.

compilador o empaquetadores de js.
babel y webpack.

clase 3, back-end.
este trabaja del lado del servidor, es decir la logica
al momento que el navegador hace una peticion.

maneja lenguajes de programacion. se pueden trabajar diferentes lenjuages.

frameworks; ayuda hacer cosas mas complejas y mas rapidas.

 clase 4; full stack
 desarrolladores que conocen tanto los lenguajes de frontend y backend.

 clase 5; pagina estatica y pagina dinamica:

estaticas; son todas las paginas que tienen informacion para consumir 
y estas no van a cambiar, solo modificiones simples, estas paginas
no estan conectadas a bases de datos, estas paginas se generan del 
lado del servidor. son paginas informativas. landing pages.

dinamicas; mas bien son aplicaciones, o web apps, 
estas si estan conectadas a 
usuarios, y genera base de datos-
estas si generan interaccion con el usuario.

clase 5; html, anatomia de una pagina web.
hypertext markup language, lenguaje de marcado de texto.
la opcion de saltar entre contenidos, es una etiqueta.

container:
{header; logo, navigation.
main content/ sidebar
footer; ......}


clase 6; index y su estructura basica.

se recomienda que el primer archivo html, se llame
index.html
la pagina que el servidor siempre busacara sera el index.html
por eso debemos iniciar con el index.html







